=====================
  Todo
=====================
1. Watch symbols in realtime
2. Keep track of which symbols are being tracked
3. Stop tracking some symbols???
4. Add symbols in runtime
5. Broadcast every update
6. If the update is final, try to insert it into the db
7. If the symbol is not initialized, throw an error at the begining of the watch method


// - Notify other modules that the symbol has been initialized properly
// - Archivist: download the old history of the symbol
// - Watcher: watch the market in real time, store the candles in the database
// - Analyst: After each candle arrives


-- Strategy algorithm --
. initialize all pairs
. once all pairs have been initialized
  a. Launch the listener 'thread'
  b. Start fetching the history of each pair (queue based, single fetch thread?)
. once we have ENOUGH data, start Analyzing it
  a. EMA50
  b. VixFix
  c. Direction
. after a candle has been analyzed, check if it's a buy / sell or ignore
. notify the trader
. check the current volume of the market
. negotiate to find a position size
. open position
. set HARD SL
. configure Soft SL, and Trailing SL activation point
. keep listening to the market

=====================
  Backlog
=====================
. Launch thread that listens to the market

. Store new candles in a 'mem-db'
. When a new candle arrives, try to analyze it (and other data without ta)
. If there is not enough information, return

. Launch a process that fetches previous information
. Parallel fetch
. Generate a unique id (maybe divide time frame)
. if we are asking TOO MUCH info to binance, wait a little

. Calculate EMA50
. Calculate VixFix
. Enter positions
. Track positions
. Set SL Immediately

=====================
  Ideas
=====================
. Process that analyzes the market and finds 'good coins'
. Real time visualization of EVERYTHING
. Real time client for candles
  . Publish the new data in a socket or something ??

=====================
  Done
=====================
- Read about proper event cycles, implement it here
- Init a symbol
- Download the full history of a pair
- Download the full history of many pairs
- Download the partial history of a pair
- Notify
